/******************************************************************************

este algoritimo mostra a soma dos números entre o limite inferior e o limite superior

*******************************************************************************/
#include <stdio.h>

int somaTermosIter(int limInf, int limSup);
int somaTermosRec(int limInf, int limSup);

int main()
{
    int numInicial, numFinal, soma;
    printf("Soma de intervalos de numeros inteiros\n\n");
    printf("Numero incial: ");
    scanf("%d", &numInicial);
    printf("Número final: ");
    scanf("%d", &numFinal);
    
    soma = somaTermosIter(numInicial, numFinal);
    printf("Soma com o FOR: %d\n", soma);
    soma = somaTermosRec(numInicial, numFinal);
    printf("Soma por recursividade: %d\n", soma);
    printf("\nElas são iguais!!");
    
    return 0;
}

int somaTermosIter(int limInf, int limSup)
{
    int soma = 0;
    int i;
    
    for (i=limInf; i <= limSup; i++){
        soma += i;
    }
    return soma;
}

// O lupping recursivo //
/*
 Nele os números que deveriam ser retornados (limInf) na verdade são armazenados em uma pilha que quando chegar ao final somará o 
return da condicional com todos os outros números da pilha
*/

int somaTermosRec(int limInf, int limSup)
{
    if (limInf >= limSup)
        return limSup;
    

    return (limInf + somaTermosRec(limInf+1, limSup));
}

//----------------OU--------------------//

// int somaTermosRec(int limInf, int limSup)
// {
//     if (limInf > limSup)
//         return 0;
    

//     return (limInf + somaTermosRec(limInf+1, limSup));
// }
